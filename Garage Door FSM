module function(input clk
                input reset,
                input [3:0] num,
                output d);
                
      reg [1:0] state, nextstate;
      parameter s0= 2'b00;
      parameter s1= 2'b01;
      parameter s2= 2'b10;
      parameter s3= 2'b11;
      
      //state register
      always@(posedge clk, posedge reset)
        if(reset) state<= s0;
        else      state<= nextstate;
        
      //next state logic
   always@(*)
     case(state)
        s0: if(input== 5)
              nextstate= s1;
            else
              nextstate=s0;
        s1: if(input== 2)
               nextstate= s2;
             else if(input== 5)
                 nextstate=s1;
             else
                nextstate= s0;
        s2: if(input== 9)
                nextstate= s3;
            else if(input== 5)
                  nextstate= s1;
            else
                nextstate= s0;
                
        s3:  nextstate=s0;
        default: nextstate = S0;
    endcase 
        
       assign d= (state == s3);
       
       endmodule
                
             
